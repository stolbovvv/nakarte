"use strict";class Menu{constructor(element){let{activeClass:activeClass}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.menuRoot="string"==typeof element?document.querySelector(element):element,this.menuRoot&&(this.menuWrapper=this.menuRoot.querySelector(".js-menu-wrapper"),this.menuTrigger=this.menuRoot.querySelector(".js-menu-trigger"),this.options={activeClass:activeClass||"is-active"},this.init())}show(){this.menuWrapper.classList.add(this.options.activeClass),this.menuTrigger.classList.add(this.options.activeClass),document.body.style.overflow="hidden"}hide(){this.menuWrapper.classList.remove(this.options.activeClass),this.menuTrigger.classList.remove(this.options.activeClass),document.body.style.removeProperty("overflow")}toggle(){this.menuTrigger.classList.contains(this.options.activeClass)?this.hide():this.show()}init(){this.menuTrigger.addEventListener("click",(()=>this.toggle()))}}window.addEventListener("DOMContentLoaded",(()=>{const heroParallax=document.querySelector("#hero-parallax"),customInputs=document.querySelectorAll(".js-input"),customSelects=document.querySelectorAll(".select"),customQuote=document.querySelectorAll(".quote"),animCard=document.querySelectorAll(".anim-card"),animButton=document.querySelectorAll(".anim-button");heroParallax&&new Parallax(heroParallax,{pointerEvents:!0}),customSelects.forEach((select=>{new SlimSelect({select:select.querySelector(".select__field"),settings:{showSearch:!1}})})),customInputs.forEach((item=>{const field=item.querySelector("input"),textarea=item.querySelector("textarea");field&&field.addEventListener("input",(_ref=>{let{target:target}=_ref;0===target.value.length||item.matches(".not-empty")||item.classList.add("not-empty"),0===target.value.length&&item.classList.remove("not-empty")})),textarea&&textarea.addEventListener("input",(_ref2=>{let{target:target}=_ref2;0===target.value.length||item.matches(".not-empty")||item.classList.add("not-empty"),0===target.value.length&&item.classList.remove("not-empty")}))})),customQuote.forEach((item=>{const moreBody=item.querySelector(".quote__more"),hideTrigger=item.querySelector(".quote-hide-trigger"),showTrigger=item.querySelector(".quote-show-trigger");showTrigger.addEventListener("click",(()=>{moreBody.classList.add("is-active"),showTrigger.classList.add("is-hide"),hideTrigger.classList.remove("is-hide")})),hideTrigger.addEventListener("click",(()=>{moreBody.classList.remove("is-active"),showTrigger.classList.remove("is-hide"),hideTrigger.classList.add("is-hide")}))})),new Menu(".js-menu"),gsap.to(".anim-button",{"--turn":"1turn",ease:"none",duration:3,repeat:-1}),gsap.to(".anim-card_turn-01",{"--turn":"1.1turn",ease:"none",duration:20,repeat:-1}),gsap.to(".anim-card_turn-03",{"--turn":"1.3turn",ease:"none",duration:19.5,repeat:-1}),gsap.to(".anim-card_turn-05",{"--turn":"1.5turn",ease:"none",duration:19,repeat:-1}),gsap.to(".anim-card_turn-07",{"--turn":"1.7turn",ease:"none",duration:18.5,repeat:-1}),animCard.forEach((card=>{const animation=gsap.to(card,{"--width":"0%",ease:"none",duration:.5,paused:!0});card.addEventListener("mouseenter",(()=>animation.play())),card.addEventListener("mouseleave",(()=>animation.reverse()))})),animButton.forEach((button=>{const animation=gsap.to(button,{"--width":"0%",ease:"none",duration:.5,paused:!0});button.addEventListener("mouseenter",(()=>animation.play())),button.addEventListener("mouseleave",(()=>animation.reverse()))}));const svgMapBody=document.querySelector(".main__bg");document.querySelectorAll(".main__bg path").forEach((svgPath=>{const mapAnimataion=gsap.to(svgPath,{filter:"drop-shadow(0px 4px 20px rgba(255,255,220,0.5))",duration:.2,paused:!0});svgPath.addEventListener("mouseenter",(()=>{svgMapBody.append(svgPath),mapAnimataion.play()})),svgPath.addEventListener("mouseleave",(()=>mapAnimataion.reverse()))}))}));